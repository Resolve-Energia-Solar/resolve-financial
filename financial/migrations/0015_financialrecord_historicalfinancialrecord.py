# Generated by Django 5.0.4 on 2024-12-13 17:48

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('financial', '0014_historicalfranchiseinstallment'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FinancialRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código de Integração')),
                ('protocol', models.CharField(blank=True, max_length=20, null=True, verbose_name='Protocolo')),
                ('is_receivable', models.BooleanField(help_text='True para contas a receber, False para contas a pagar.', verbose_name='A Receber/A Pagar?')),
                ('status', models.CharField(choices=[('S', 'Solicitada'), ('E', 'Em Andamento'), ('P', 'Paga'), ('C', 'Cancelada')], default='P', max_length=1, verbose_name='Status')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, verbose_name='Valor')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento')),
                ('service_date', models.DateField(blank=True, null=True, verbose_name='Data de Prestação do Serviço')),
                ('department_code', models.CharField(max_length=50, verbose_name='Código do Departamento')),
                ('category_code', models.CharField(max_length=20, verbose_name='Código da Categoria')),
                ('client_supplier_code', models.BigIntegerField(verbose_name='Código do Cliente/Fornecedor')),
                ('invoice_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do Documento')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('approved_at', models.DateField(blank=True, null=True, verbose_name='Data de Aprovação')),
                ('paid_at', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('requester', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requested_financial_records', to=settings.AUTH_USER_MODEL, verbose_name='Solicitante')),
                ('responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responsible_financial_records', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'Conta a Pagar/Receber',
                'verbose_name_plural': 'Contas a Pagar/Receber',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalFinancialRecord',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('integration_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Código de Integração')),
                ('protocol', models.CharField(blank=True, max_length=20, null=True, verbose_name='Protocolo')),
                ('is_receivable', models.BooleanField(help_text='True para contas a receber, False para contas a pagar.', verbose_name='A Receber/A Pagar?')),
                ('status', models.CharField(choices=[('S', 'Solicitada'), ('E', 'Em Andamento'), ('P', 'Paga'), ('C', 'Cancelada')], default='P', max_length=1, verbose_name='Status')),
                ('value', models.DecimalField(decimal_places=2, default=0.0, max_digits=20, verbose_name='Valor')),
                ('due_date', models.DateField(verbose_name='Data de Vencimento')),
                ('service_date', models.DateField(blank=True, null=True, verbose_name='Data de Prestação do Serviço')),
                ('department_code', models.CharField(max_length=50, verbose_name='Código do Departamento')),
                ('category_code', models.CharField(max_length=20, verbose_name='Código da Categoria')),
                ('client_supplier_code', models.BigIntegerField(verbose_name='Código do Cliente/Fornecedor')),
                ('invoice_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Número do Documento')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notas')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='Criado em')),
                ('approved_at', models.DateField(blank=True, null=True, verbose_name='Data de Aprovação')),
                ('paid_at', models.DateField(blank=True, null=True, verbose_name='Data de Pagamento')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('requester', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Solicitante')),
                ('responsible', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Responsável')),
            ],
            options={
                'verbose_name': 'historical Conta a Pagar/Receber',
                'verbose_name_plural': 'historical Contas a Pagar/Receber',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
